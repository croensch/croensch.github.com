{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx"],"names":["ProjectCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProjectCardContent","ProjectCardCategory","grey600","ProjectCardTitle","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","grey200","ProjectCard","category","title","description","thumbnail","uid","to","className","text","RichText","render","src","url","alt","AboutContainer","AboutLinkContainer","AboutLink","AboutBio","AboutActions","About","bio","socialLinks","map","social","i","key","href","about_link","spans","data","target","rel","Button","Hero","orange500","purple500","green500","teal500","blue600","blue200","orange600","orange200","purple600","purple200","green600","green200","teal600","teal200","Section","WorkAction","RenderBody","home","projects","meta","titleTemplate","name","content","property","author","concat","hero_title","hero_button_link","hero_button_text","project","node","project_category","project_title","project_preview_description","project_preview_thumbnail","_meta","about_title","about_bio","about_links","query","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout","ButtonContainer","blue400","pink400","purple400","blue300","this","props","children","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-8ab138b3fce7272d48c3.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { RichText } from \"prismic-reactjs\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport colors from \"styles/colors\";\nimport PropTypes from \"prop-types\";\n\nconst ProjectCardContainer = styled(Link)`\n    display: grid;\n    grid-template-columns: 4fr 7fr;\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n    margin-bottom: 4em;\n    transition: all 150ms ease-in-out;\n    text-decoration: none;\n    color: currentColor;\n\n    @media(max-width:950px) {\n        grid-template-columns: 4.5fr 7fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        margin-bottom: 2em;\n    }\n\n    &:hover {\n        box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n        transition: all 150ms ease-in-out;\n\n        .ProjectCardAction {\n            color: ${colors.blue500};\n            transition: all 150ms ease-in-out;\n\n            span {\n                transform: translateX(0px);\n                opacity: 1;\n                transition: transform 150ms ease-in-out;\n            }\n        }\n\n        .ProjectCardContent::before {\n            opacity: 0.02;\n            transition: all 150ms ease-in-out;\n        }\n\n        .ProjectCardImageContainer::before {\n            opacity: 0.2;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst ProjectCardContent = styled(\"div\")`\n    background: white;\n    padding: 4em 3em 2.25em 3em;\n    position: relative;\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${colors.blue500};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    @media(max-width:950px) {\n        padding: 3.25em 2.5em 2em 2.5em;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-row: 2;\n    }\n`\n\nconst ProjectCardCategory = styled(\"h6\")`\n    font-weight: 600;\n    color: ${colors.grey600};\n`\n\nconst ProjectCardTitle = styled(\"h3\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n`\n\nconst ProjectCardBlurb = styled(\"div\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n    margin-bottom: 5em;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 2.5em;\n    }\n`\n\nconst ProjectCardAction = styled(\"div\")`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n`\n\nconst ProjectCardImageContainer = styled(\"div\")`\n    background: ${colors.grey200};\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    overflow: hidden;\n    position: relative;\n    padding-left: 2em;\n    padding-right: 2em;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        padding-top: 3em;\n        max-height: 200px;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-start;\n    }\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${colors.blue500};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    img {\n        max-width: 400px;\n        width: 100%;\n        box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n\n        @media(max-width:${dimensions.maxwidthTablet}px) {\n            max-width: 300px;\n        }\n    }\n`\n\nconst ProjectCard = ({ category, title, description, thumbnail, uid}) => (\n    <ProjectCardContainer to={`/work/${uid}`}>\n        <ProjectCardContent className=\"ProjectCardContent\">\n            <ProjectCardCategory>\n                {category[0].text}\n            </ProjectCardCategory>\n            <ProjectCardTitle>\n                {title[0].text}\n            </ProjectCardTitle>\n            <ProjectCardBlurb>\n                {RichText.render(description)}\n            </ProjectCardBlurb>\n            <ProjectCardAction className=\"ProjectCardAction\">\n                Details <span>&#8594;</span>\n            </ProjectCardAction>\n        </ProjectCardContent>\n        <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\n            <img src={thumbnail.url} alt={title[0].text}/>\n        </ProjectCardImageContainer>\n    </ProjectCardContainer>\n)\n\nexport default ProjectCard;\n\nProjectCard.propTypes = {\n    category: PropTypes.array.isRequired,\n    thumbnail: PropTypes.object.isRequired,\n    title: PropTypes.array.isRequired,\n    description: PropTypes.array.isRequired,\n    uid: PropTypes.string.isRequired\n}","import React from \"react\";\nimport Button from \"components/_ui/Button\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport { RichText } from \"prismic-reactjs\";\nimport PropTypes from \"prop-types\";\n\nconst AboutContainer = styled(\"div\")`\n    padding-top: 1em;\n    display: grid;\n    grid-template-columns: 8em 1fr 8em;\n    grid-gap: 3em;\n\n    @media(max-width: ${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr 3fr 1fr;\n    }\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-template-columns: 7em 1fr;\n        grid-template-rows: 3em 1fr;\n        grid-gap: 2em;\n    }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutLink = styled(\"a\")`\n    margin-bottom: 1.5em;\n    font-weight: 600;\n    line-height: 1.9;\n    text-decoration: none;\n    color: currentColor;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        opacity: 0;\n        transition: all 400ms ease-in-out;\n    }\n\n    &:hover {\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst AboutBio = styled(\"div\")`\n    padding-bottom: 3em;\n    max-width: 480px;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutActions = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        padding: 0;\n        grid-column: 1 / -1;\n        grid-row: 1;\n    }\n`\n\n\nconst About = ({ bio, socialLinks }) => (\n    <AboutContainer>\n        <AboutLinkContainer>\n            {socialLinks.map((social, i) => (\n                <AboutLink\n                    key={i}\n                    href={social.about_link[0].spans[0].data.url}\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    {social.about_link[0].text}\n                    <span>&#8594;</span>\n                </AboutLink>\n            ))}\n        </AboutLinkContainer>\n        <AboutBio>\n            {RichText.render(bio)}\n        </AboutBio>\n        <AboutActions>\n            <a href=\"mailto:marguerite.roth@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button className=\"Button--secondary\">\n                    Email me\n                </Button>\n            </a>\n        </AboutActions>\n    </AboutContainer>\n)\n\nexport default About;\n\nAbout.propTypes = {\n    bio: PropTypes.array.isRequired,\n    socialLinks: PropTypes.array.isRequired,\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { RichText } from \"prismic-reactjs\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\nimport Button from \"components/_ui/Button\";\nimport About from \"components/About\";\nimport Layout from \"components/Layout\";\nimport ProjectCard from \"components/ProjectCard\";\n\nconst Hero = styled(\"div\")`\n    padding-top: 2.5em;\n    padding-bottom: 3em;\n    margin-bottom: 6em;\n    max-width: 830px;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n       margin-bottom: 3em;\n    }\n\n    h1 {\n        margin-bottom: 1em;\n\n        a {\n            text-decoration: none;\n            transition: all 100ms ease-in-out;\n\n            &:nth-of-type(1) { color: ${colors.blue500}; }\n            &:nth-of-type(2) { color: ${colors.orange500}; }\n            &:nth-of-type(3) { color: ${colors.purple500}; }\n            &:nth-of-type(4) { color: ${colors.green500}; }\n            &:nth-of-type(5) { color: ${colors.teal500}; }\n\n            &:hover {\n                cursor: pointer;\n                transition: all 100ms ease-in-out;\n\n                &:nth-of-type(1) { color: ${colors.blue600};    background-color: ${colors.blue200};}\n                &:nth-of-type(2) { color: ${colors.orange600};  background-color: ${colors.orange200};}\n                &:nth-of-type(3) { color: ${colors.purple600};  background-color: ${colors.purple200};}\n                &:nth-of-type(4) { color: ${colors.green600};   background-color: ${colors.green200};}\n                &:nth-of-type(5) { color: ${colors.teal600};    background-color: ${colors.teal200};}\n\n            }\n        }\n    }\n`\n\nconst Section = styled(\"div\")`\n    margin-bottom: 10em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 4em;\n    }\n\n    &:last-of-type {\n        margin-bottom: 0;\n    }\n`\n\nconst WorkAction = styled(Link)`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n    margin-left: auto;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n       margin: 0 auto;\n    }\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n\n    &:hover {\n        color: ${colors.blue500};\n        transition: all 150ms ease-in-out;\n\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: transform 150ms ease-in-out;\n        }\n    }\n`\n\nconst RenderBody = ({ home, projects, meta }) => (\n    <>\n        <Helmet\n            title={meta.title}\n            titleTemplate={`%s | ${meta.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:title`,\n                    content: meta.title,\n                },\n                {\n                    property: `og:description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: meta.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: meta.title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: meta.description,\n                },\n            ].concat(meta)}\n        />\n        <Hero>\n            <>\n                {RichText.render(home.hero_title)}\n            </>\n            <a href={home.hero_button_link.url}\n               target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button>\n                    {RichText.render(home.hero_button_text)}\n                </Button>\n            </a>\n        </Hero>\n        <Section>\n            {projects.map((project, i) => (\n                <ProjectCard\n                    key={i}\n                    category={project.node.project_category}\n                    title={project.node.project_title}\n                    description={project.node.project_preview_description}\n                    thumbnail={project.node.project_preview_thumbnail}\n                    uid={project.node._meta.uid}\n                />\n            ))}\n            <WorkAction to={\"/work\"}>\n                See more work <span>&#8594;</span>\n            </WorkAction>\n        </Section>\n        <Section>\n            {RichText.render(home.about_title)}\n            <About\n                bio={home.about_bio}\n                socialLinks={home.about_links}\n            />\n        </Section>\n    </>\n);\n\nexport default ({ data }) => {\n    //Required check for no data being returned\n    const doc = data.prismic.allHomepages.edges.slice(0, 1).pop();\n    const projects = data.prismic.allProjects.edges;\n    const meta = data.site.siteMetadata;\n\n    if (!doc || !projects) return null;\n\n    return (\n        <Layout>\n            <RenderBody home={doc.node} projects={projects} meta={meta}/>\n        </Layout>\n    )\n}\n\nRenderBody.propTypes = {\n    home: PropTypes.object.isRequired,\n    projects: PropTypes.array.isRequired,\n    meta: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n    {\n        prismic {\n            allHomepages {\n                edges {\n                    node {\n                        hero_title\n                        hero_button_text\n                        hero_button_link {\n                            ... on PRISMIC__ExternalLink {\n                                _linkType\n                                url\n                            }\n                        }\n                        content\n                        about_title\n                        about_bio\n                        about_links {\n                            about_link\n                        }\n                    }\n                }\n            }\n            allProjects {\n                edges {\n                    node {\n                        project_title\n                        project_preview_description\n                        project_preview_thumbnail\n                        project_category\n                        project_post_date\n                        _meta {\n                            uid\n                        }\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\n\nconst ButtonContainer = styled(\"button\")`\n    padding: 1em 2em;\n    background: ${colors.blue400};\n    font-weight: 600;\n    color: white;\n    outline: none;\n    border: none;\n    font-size: 1rem;\n    border-radius: 2px;\n    position: relative;\n    transition: background 100ms ease-in-out;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        padding: 0.8em 1.8em;\n        font-size: 1em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(135deg, ${colors.pink400} 0%, ${colors.purple400} 100%);\n        z-index: -1;\n    }\n\n    &:hover {\n        cursor: pointer;\n        background: transparent;\n        transition: background 100ms ease-in-out;\n    }\n\n    &.Button--secondary {\n        background: ${colors.blue200};\n        color: ${colors.blue600};\n        padding: 0.95em 1.8em;\n        font-size: 0.95rem;\n\n        &:hover {\n            background: ${colors.blue300};\n            transition: background 100ms ease-in-out;\n        }\n    }\n`\n\nclass Button extends Component {\n    render() {\n        const { children, ...props } = this.props;\n        return (\n            <ButtonContainer\n                onClick={this.props.onClick}\n                {...props}>\n                {this.props.children}\n            </ButtonContainer>\n        );\n    }\n}\n\nexport default Button;"],"sourceRoot":""}